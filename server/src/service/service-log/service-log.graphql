type ServiceLog {
  id: ID!
  car: Car!
  datePerformed: Date!
  odometerReading: OdometerReading
  notes: String
  items: [ServiceItem!]!
  schedule: ServiceSchedule
  performedBy: String
  createdAt: Date!
  updatedAt: Date!
}

extend type Car {
  serviceLogs: [ServiceLog!]!
}

input CreateServiceLogInput {
  carId: ID!
  datePerformed: Date!
  odometerKm: Int
  serviceItemIds: [ID!]!
  scheduleId: ID
  notes: String
  performedBy: String
}

input UpdateServiceLogInput {
  id: ID!
  datePerformed: Date
  odometerKm: Int
  serviceItemIds: [ID!]
  scheduleId: ID
  notes: String
  performedBy: String
}

type Mutation {
  createServiceLog(input: CreateServiceLogInput!): ServiceLog!
  updateServiceLog(input: UpdateServiceLogInput!): ServiceLog!
  deleteServiceLog(id: ID!): Boolean!
}
