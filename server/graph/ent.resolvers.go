package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"

	"github.com/Dan6erbond/revline/ent"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []string) ([]ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}

// Car returns CarResolver implementation.
func (r *Resolver) Car() CarResolver { return &carResolver{r} }

// Document returns DocumentResolver implementation.
func (r *Resolver) Document() DocumentResolver { return &documentResolver{r} }

// Media returns MediaResolver implementation.
func (r *Resolver) Media() MediaResolver { return &mediaResolver{r} }

// Profile returns ProfileResolver implementation.
func (r *Resolver) Profile() ProfileResolver { return &profileResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

// CreateFuelUpInput returns CreateFuelUpInputResolver implementation.
func (r *Resolver) CreateFuelUpInput() CreateFuelUpInputResolver {
	return &createFuelUpInputResolver{r}
}

// CreateServiceLogInput returns CreateServiceLogInputResolver implementation.
func (r *Resolver) CreateServiceLogInput() CreateServiceLogInputResolver {
	return &createServiceLogInputResolver{r}
}

type carResolver struct{ *Resolver }
type documentResolver struct{ *Resolver }
type mediaResolver struct{ *Resolver }
type profileResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
type createFuelUpInputResolver struct{ *Resolver }
type createServiceLogInputResolver struct{ *Resolver }
